Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
                              miniLogicAnalyzer.o (__udivmodhi4)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                              miniLogicAnalyzer.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                              miniLogicAnalyzer.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
                              miniLogicAnalyzer.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o)
                              miniLogicAnalyzer.o (ltoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodsi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

samplesPos          0x4               miniLogicAnalyzer.o
bufferUsedSpace     0x2               miniLogicAnalyzer.o
zoom                0x2               miniLogicAnalyzer.o
i                   0x2               miniLogicAnalyzer.o
dataBuffer          0x366             miniLogicAnalyzer.o
counter             0x2               miniLogicAnalyzer.o
minSampleTime       0x2               miniLogicAnalyzer.o
int2str             0x8               miniLogicAnalyzer.o
lcdCacheIdx         0x2               lcd.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
LOAD miniLogicAnalyzer.o
LOAD lcd.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1078
 *(.vectors)
 .vectors       0x00000000       0x26 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00000026      0x3f0 miniLogicAnalyzer.o
                0x0000021e                createdBy
                0x00000026                introScreen
 .progmem.data  0x00000416      0x1e5 lcd.o
                0x00000416                font5x7
                0x000005fc                . = ALIGN (0x2)
 *fill*         0x000005fb        0x1 00
                0x000005fc                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000005fc        0x0 linker stubs
 *(.trampolines*)
                0x000005fc                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000005fc                __ctors_start = .
 *(.ctors)
                0x000005fc                __ctors_end = .
                0x000005fc                __dtors_start = .
 *(.dtors)
                0x000005fc                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000005fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x000005fc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000005fc        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000608       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
                0x00000608                __do_copy_data
 .init4         0x0000061e       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
                0x0000061e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000062e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 *(.init9)
 *(.text)
 .text          0x00000632        0x2 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
                0x00000632                __vector_1
                0x00000632                __vector_12
                0x00000632                __bad_interrupt
                0x00000632                __vector_6
                0x00000632                __vector_3
                0x00000632                __vector_11
                0x00000632                __vector_13
                0x00000632                __vector_17
                0x00000632                __vector_7
                0x00000632                __vector_5
                0x00000632                __vector_4
                0x00000632                __vector_9
                0x00000632                __vector_2
                0x00000632                __vector_15
                0x00000632                __vector_8
                0x00000632                __vector_14
                0x00000632                __vector_10
                0x00000632                __vector_16
                0x00000632                __vector_18
 .text          0x00000634      0x688 miniLogicAnalyzer.o
                0x00000b86                checkIfNoButtonIsPressed
                0x00000634                saveSampleToBuffer
                0x0000098e                sendChannelsDataOnLCD
                0x00000c06                main
                0x000006d4                checkInputs
                0x00000b12                getNextSampleString
                0x0000071e                printRuler
                0x000009e0                checkDecreaseButton
                0x00000a68                checkIncreaseButton
                0x0000076a                printCapturedData
 .text          0x00000cbc      0x28a lcd.o
                0x00000d4e                lcd_base_addr
                0x00000cbc                lcd_goto_xy
                0x00000cde                lcd_goto_xy_exact
                0x00000d76                lcd_chr
                0x00000e3a                lcd_clear
                0x00000eea                lcd_pixelBack
                0x00000ec0                lcd_col
                0x00000dd4                lcd_str
                0x00000efe                printPictureOnLCD
                0x00000dec                lcd_clear_area
                0x00000e66                lcd_contrast
                0x00000e82                lcd_init
                0x00000cfa                lcd_send
                0x00000e32                lcd_clear_line
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .text          0x00000f46        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodsi4.o)
                0x00000f46                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000f46       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
                0x00000f46                __udivmodhi4
 .text.libgcc   0x00000f6e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .text.libgcc   0x00000f6e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000f6e        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000f6e       0x3e c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
                0x00000f6e                itoa
 .text.avr-libc
                0x00000fac       0x64 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o)
                0x00000fac                ltoa
 .text.avr-libc
                0x00001010       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
                0x00001010                strrev
 .text.libgcc   0x00001030       0x44 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodsi4.o)
                0x00001030                __udivmodsi4
                0x00001074                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001074        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
                0x00001074                exit
                0x00001074                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001074        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 *(.fini0)
                0x00001078                _etext = .

.data           0x00800060       0x16 load address 0x00001078
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .data          0x00800060       0x16 miniLogicAnalyzer.o
 .data          0x00800076        0x0 lcd.o
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .data          0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800076                . = ALIGN (0x2)
                0x00800076                _edata = .
                0x00800076                PROVIDE (__data_end, .)

.bss            0x00800076      0x37e
                0x00800076                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4/crtm8.o
 .bss           0x00800076        0x0 miniLogicAnalyzer.o
 .bss           0x00800076        0x0 lcd.o
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodhi4.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_exit.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_clear_bss.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(itoa.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(ltoa.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr4\libc.a(strrev.o)
 .bss           0x00800076        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr4\libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800076      0x37c miniLogicAnalyzer.o
                0x00800076                samplesPos
                0x0080007a                bufferUsedSpace
                0x0080007c                zoom
                0x0080007e                i
                0x00800080                dataBuffer
                0x008003e6                counter
                0x008003e8                minSampleTime
                0x008003ea                int2str
 COMMON         0x008003f2        0x2 lcd.o
                0x008003f2                lcdCacheIdx
                0x008003f4                PROVIDE (__bss_end, .)
                0x00001078                __data_load_start = LOADADDR (.data)
                0x0000108e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008003f4        0x0
                0x008003f4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008003f4                PROVIDE (__noinit_end, .)
                0x008003f4                _end = .
                0x008003f4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 miniLogicAnalyzer.o
 .debug_aranges
                0x00000020       0x20 lcd.o

.debug_pubnames
                0x00000000      0x280
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x16f miniLogicAnalyzer.o
 .debug_pubnames
                0x0000016f      0x111 lcd.o

.debug_info     0x00000000      0x923
 *(.debug_info)
 .debug_info    0x00000000      0x432 miniLogicAnalyzer.o
 .debug_info    0x00000432      0x4f1 lcd.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x408
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x1be miniLogicAnalyzer.o
 .debug_abbrev  0x000001be      0x24a lcd.o

.debug_line     0x00000000      0xa56
 *(.debug_line)
 .debug_line    0x00000000      0x683 miniLogicAnalyzer.o
 .debug_line    0x00000683      0x3d3 lcd.o

.debug_frame    0x00000000      0x1a0
 *(.debug_frame)
 .debug_frame   0x00000000       0xb0 miniLogicAnalyzer.o
 .debug_frame   0x000000b0       0xf0 lcd.o

.debug_str      0x00000000      0x341
 *(.debug_str)
 .debug_str     0x00000000      0x22c miniLogicAnalyzer.o
                                0x265 (size before relaxing)
 .debug_str     0x0000022c      0x115 lcd.o
                                0x20d (size before relaxing)

.debug_loc      0x00000000      0x55a
 *(.debug_loc)
 .debug_loc     0x00000000      0x314 miniLogicAnalyzer.o
 .debug_loc     0x00000314      0x246 lcd.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(miniLogicAnalyzer.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x18
 .debug_ranges  0x00000000       0x18 lcd.o
